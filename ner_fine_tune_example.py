# -*- coding: utf-8 -*-
"""NER Fine Tune Example.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o5D2XQ-o87wbLjhlW7Aqde8w2kzRjllw
"""

# Data Prepration
!openai tools fine_tunes.prepare_data -f training_data.jsonl -q

import openai

API_KEY = "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"
openai.api_key = API_KEY



with open("training_data.jsonl") as f:
  response = openai.File.create(file=f, purpose='fine-tune')
  print(response)

# Get the id
file_id = response["id"]
file_id

## Fine Tune the model
print(file_id)
response = openai.FineTune.create(training_file=file_id, model='davinci')
print(response)

#get refrence
ref_key = response["events"][0]["message"].split(":")[1].strip()
ref_key

# Check the status
response = openai.FineTune.retrieve(id=ref_key)
print(response)

model_id = "davinci:ft-personal-2023-05-11-11-16-47"

prompt="""A BS/MS in Computer Science or related field Preferred : 2+ years of programming experience writing code in
 Java, C++, C#, or C or other object-oriented programming language Experience developing and testing computer software 
 and/or online services Strong coding, debugging and problem-solving skills Strong knowledge of object-oriented programming language paradigms 
 Great communication skills to collaborate cross-group and work effectively within the team Expertise in web or mobile application development 
 Expertise in relational databases, distributed systems and/or big data technologies Experience in developing large scale services 
 Ability to meet Microsoft, customer and/or government security screening requirements are required for this role. 
 These requirements include, but are not limited to the following specialized security screenings:
Microsoft Cloud Background Check: This position will be required to pass the Microsoft Cloud background check 
upon hire/transfer and every two years thereafter. \n\n###\n\n"""

response = openai.Completion.create(
  model=model_id,
  prompt=prompt,
  temperature=0.7,
  max_tokens=256,
  top_p=1,
  frequency_penalty=0,
  presence_penalty=0,
  stop=["END"]
)

response

response["choices"][0]["text"]



